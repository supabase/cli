openapi: 3.0.0
paths:
  /v1/projects:
    get:
      operationId: getProjects
      summary: List all projects
      description: Returns a list of all projects you've previously created.
      parameters: []
      responses:
        '200':
          description: ''
      tags: &ref_0
        - projects
      security: &ref_1
        - bearer: []
    post:
      operationId: createProject
      summary: Create a project
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectBody'
      responses:
        '201':
          description: ''
      tags: *ref_0
      security: *ref_1
  /v1/organizations:
    get:
      operationId: getOrganizations
      summary: List all organizations
      description: Returns a list of organizations that you currently belong to.
      parameters: []
      responses:
        '500':
          description: Unexpected error listing organizations
      tags: &ref_2
        - organizations
      security: &ref_3
        - bearer: []
    post:
      operationId: createOrganization
      summary: Create an organization
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationBody'
      responses:
        '500':
          description: Unexpected error creating an organization
      tags: *ref_2
      security: *ref_3
  /v1/projects/{ref}/functions:
    post:
      operationId: createFunction
      summary: Create a function
      description: Creates a function and adds it to the specified project.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
        - name: import_map
          required: false
          in: query
          schema:
            type: boolean
        - name: verify_jwt
          required: false
          in: query
          schema:
            type: boolean
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: slug
          required: false
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json: &ref_4
            schema:
              $ref: '#/components/schemas/CreateFunctionBody'
          application/vnd.denoland.eszip: *ref_4
      responses:
        '403':
          description: ''
        '500':
          description: Failed to create project's function
      tags: &ref_5
        - functions
      security: &ref_6
        - apiKeyHeader: []
          apiKeyParam: []
        - bearer: []
    get:
      operationId: getFunctions
      summary: List all functions
      description: Returns all functions you've previously added to the specified project.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to retrieve project's functions
      tags: *ref_5
      security: *ref_6
  /v1/projects/{ref}/functions/{function_slug}:
    get:
      operationId: getFunction
      summary: Retrieve a function
      description: Retrieves a function with the specified slug and project.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
        - name: function_slug
          required: true
          in: path
          description: Function slug
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to retrieve function with given slug
      tags: &ref_8
        - functions
      security: &ref_9
        - apiKeyHeader: []
          apiKeyParam: []
        - bearer: []
    patch:
      operationId: updateFunction
      summary: Update a function
      description: Updates a function with the specified slug and project.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
        - name: function_slug
          required: true
          in: path
          description: Function slug
          schema:
            type: string
        - name: import_map
          required: false
          in: query
          schema:
            type: boolean
        - name: verify_jwt
          required: false
          in: query
          schema:
            type: boolean
        - name: name
          required: false
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json: &ref_7
            schema:
              $ref: '#/components/schemas/UpdateFunctionBody'
          application/vnd.denoland.eszip: *ref_7
      responses:
        '403':
          description: ''
        '500':
          description: Failed to update function with given slug
      tags: *ref_8
      security: *ref_9
    delete:
      operationId: deleteFunction
      summary: Delete a function
      description: Deletes a function with the specified slug from the specified project.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
        - name: function_slug
          required: true
          in: path
          description: Function slug
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to delete function with given slug
      tags: *ref_8
      security: *ref_9
  /v1/projects/{ref}/functions/{function_slug}/body:
    get:
      operationId: getFunctionBody
      summary: Retrieve a function body
      description: Retrieves a function body for the specified slug and project.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
        - name: function_slug
          required: true
          in: path
          description: Function slug
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to retrieve function body with given slug
      tags: *ref_8
      security: *ref_9
  /v1/projects/{ref}/custom-hostname:
    get:
      operationId: getCustomHostnameConfig
      summary: Gets project's custom hostname config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to retrieve project's custom hostname config
      tags: &ref_10
        - custom hostname (beta)
      security: &ref_11
        - bearer: []
    delete:
      operationId: removeCustomHostnameConfig
      summary: Deletes a project's custom hostname configuration
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to delete project custom hostname configuration
      tags: *ref_10
      security: *ref_11
  /v1/projects/{ref}/custom-hostname/initialize:
    post:
      operationId: createCustomHostnameConfig
      summary: Updates project's custom hostname configuration
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomHostnameBody'
      responses:
        '403':
          description: ''
        '500':
          description: Failed to update project custom hostname configuration
      tags: *ref_10
      security: *ref_11
  /v1/projects/{ref}/custom-hostname/reverify:
    post:
      operationId: reverify
      summary: >-
        Attempts to verify the DNS configuration for project's custom hostname
        configuration
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to verify project custom hostname configuration
      tags: *ref_10
      security: *ref_11
  /v1/projects/{ref}/custom-hostname/activate:
    post:
      operationId: activate
      summary: Activates a custom hostname for a project.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to activate project custom hostname configuration
      tags: *ref_10
      security: *ref_11
  /v1/projects/{ref}/network-bans/retrieve:
    post:
      operationId: getNetworkBans
      summary: Gets project's network bans
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to retrieve project's network bans
      tags: &ref_12
        - network bans (beta)
      security: &ref_13
        - bearer: []
  /v1/projects/{ref}/network-bans:
    delete:
      operationId: removeNetworkBan
      summary: Remove network bans.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveNetworkBanRequest'
      responses:
        '403':
          description: ''
        '500':
          description: Failed to remove network bans.
      tags: *ref_12
      security: *ref_13
  /v1/projects/{ref}/network-restrictions:
    get:
      operationId: getNetworkRestrictions
      summary: Gets project's network restrictions
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to retrieve project's network restrictions
      tags: &ref_14
        - network restrictions (beta)
      security: &ref_15
        - bearer: []
  /v1/projects/{ref}/network-restrictions/apply:
    post:
      operationId: applyNetworkRestrictions
      summary: Updates project's network restrictions
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkRestrictionsRequest'
      responses:
        '403':
          description: ''
        '500':
          description: Failed to update project network restrictions
      tags: *ref_14
      security: *ref_15
  /v1/projects/{ref}/pgsodium:
    get:
      operationId: getConfig
      summary: Gets project's pgsodium config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to retrieve project's pgsodium config
      tags: &ref_16
        - pgsodium (beta)
      security: &ref_17
        - bearer: []
    put:
      operationId: updateConfig
      summary: >-
        Updates project's pgsodium config. Updating the root_key can cause all
        data encrypted with the older key to become inaccessible.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePgsodiumConfigBody'
      responses:
        '403':
          description: ''
        '500':
          description: Failed to update project's pgsodium config
      tags: *ref_16
      security: *ref_17
  /v1/projects/{ref}/postgrest:
    get:
      operationId: getPostgRESTConfig
      summary: Gets project's postgrest config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to retrieve project's postgrest config
      tags: &ref_18
        - services
      security: &ref_19
        - bearer: []
    patch:
      operationId: updatePostgRESTConfig
      summary: Updates project's postgrest config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostgrestConfigBody'
      responses:
        '403':
          description: ''
        '500':
          description: Failed to update project's postgrest config
      tags: *ref_18
      security: *ref_19
  /v1/projects/{ref}/secrets:
    get:
      operationId: getSecrets
      summary: List all secrets
      description: Returns all secrets you've previously added to the specified project.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to retrieve project's secrets
      tags: &ref_20
        - secrets
      security: &ref_21
        - apiKeyHeader: []
          apiKeyParam: []
        - bearer: []
    post:
      operationId: createSecrets
      summary: Bulk create secrets
      description: Creates multiple secrets and adds them to the specified project.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateSecretBody'
      responses:
        '403':
          description: ''
        '500':
          description: Failed to create project's secrets
      tags: *ref_20
      security: *ref_21
    delete:
      operationId: deleteSecrets
      summary: Bulk delete secrets
      description: Deletes all secrets with the given names from the specified project
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to delete secrets with given names
      tags: *ref_20
      security: *ref_21
  /v1/projects/{ref}/ssl-enforcement:
    get:
      operationId: getSslEnforcementConfig
      summary: Get project's SSL enforcement configuration.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to retrieve project's SSL enforcement config
      tags: &ref_22
        - ssl enforcement (beta)
      security: &ref_23
        - bearer: []
    put:
      operationId: updateSslEnforcementConfig
      summary: Update project's SSL enforcement configuration.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SslEnforcementRequest'
      responses:
        '403':
          description: ''
        '500':
          description: Failed to update project's SSL enforcement configuration.
      tags: *ref_22
      security: *ref_23
  /v1/projects/{ref}/types/typescript:
    get:
      operationId: getTypescriptTypes
      summary: Generate TypeScript types
      description: Returns the TypeScript types of your schema for use with supabase-js.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
        - name: included_schemas
          required: false
          in: query
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to generate TypeScript types
      tags:
        - projects
      security:
        - apiKeyHeader: []
          apiKeyParam: []
        - bearer: []
  /v1/projects/{ref}/vanity-subdomain:
    get:
      operationId: getVanitySubdomainConfig
      summary: Gets current vanity subdomain config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to get project vanity subdomain configuration
      tags: &ref_24
        - vanity subdomain (beta)
      security: &ref_25
        - bearer: []
    delete:
      operationId: removeVanitySubdomainConfig
      summary: Deletes a project's vanity subdomain configuration
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to delete project vanity subdomain configuration
      tags: *ref_24
      security: *ref_25
  /v1/projects/{ref}/vanity-subdomain/check-availability:
    post:
      operationId: checkVanitySubdomainAvailability
      summary: Checks vanity subdomain availability
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VanitySubdomainBody'
      responses:
        '403':
          description: ''
        '500':
          description: Failed to check project vanity subdomain configuration
      tags: *ref_24
      security: *ref_25
  /v1/projects/{ref}/vanity-subdomain/activate:
    post:
      operationId: activateVanitySubdomainPlease
      summary: Activates a vanity subdomain for a project.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VanitySubdomainBody'
      responses:
        '403':
          description: ''
        '500':
          description: Failed to activate project vanity subdomain configuration
      tags: *ref_24
      security: *ref_25
  /v1/projects/{ref}/upgrade:
    post:
      operationId: upgradeProject
      summary: Upgrades the project's Postgres version
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeDatabaseBody'
      responses:
        '403':
          description: ''
        '500':
          description: Failed to initiate project upgrade
      tags: &ref_26
        - database version upgrade (beta)
      security: &ref_27
        - bearer: []
  /v1/projects/{ref}/upgrade/eligibility:
    get:
      operationId: upgradeEligibilityInformation
      summary: Returns the project's eligibility for upgrades
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to determine project upgrade eligibility
      tags: *ref_26
      security: *ref_27
  /v1/projects/{ref}/upgrade/status:
    get:
      operationId: getUpgradeStatus
      summary: Gets the latest status of the project's upgrade
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
        '500':
          description: Failed to retrieve project upgrade status
      tags: *ref_26
      security: *ref_27
  /v1/projects/{ref}/readonly:
    get:
      operationId: getReadOnlyModeStatus
      summary: Returns project's readonly mode status
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '500':
          description: Failed to get project readonly mode status
      tags: &ref_28
        - database readonly mode
      security: &ref_29
        - bearer: []
  /v1/projects/{ref}/readonly/temporary-disable:
    post:
      operationId: temporarilyDisableReadonlyMode
      summary: Disables project's readonly mode for the next 15 minutes
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '500':
          description: Failed to disable project's readonly mode
      tags: *ref_28
      security: *ref_29
  /v1/projects/{ref}/config/auth/sso/providers/{provider_id}:
    get:
      operationId: getProviderById
      summary: Gets a SSO provider by its UUID
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
        - name: provider_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '403':
          description: ''
      tags: &ref_30
        - sso
      security: &ref_31
        - bearer: []
    put:
      operationId: updateProviderById
      summary: Updates a SSO provider by its UUID
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
        - name: provider_id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProviderBody'
      responses:
        '403':
          description: ''
      tags: *ref_30
      security: *ref_31
    delete:
      operationId: removeProviderById
      summary: Removes a SSO provider by its UUID
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
        - name: provider_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '403':
          description: ''
      tags: *ref_30
      security: *ref_31
  /v1/projects/{ref}/config/auth/sso/providers:
    post:
      operationId: createProvider
      summary: Creates a new SSO provider
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProviderBody'
      responses:
        '403':
          description: ''
      tags: *ref_30
      security: *ref_31
    get:
      operationId: listProviders
      summary: Lists all SSO providers
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            type: string
      responses:
        '403':
          description: ''
      tags: *ref_30
      security: *ref_31
info:
  title: Supabase API (v1)
  description: ''
  version: 1.0.0
  contact: {}
tags:
  - name: organizations
    description: Organization endpoints
  - name: projects
    description: Project endpoints
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CreateProjectBody:
      type: object
      properties: {}
    CreateOrganizationBody:
      type: object
      properties: {}
    CreateFunctionBody:
      type: object
      properties:
        slug:
          type: string
        name:
          type: string
        body:
          type: string
        verify_jwt:
          type: boolean
      required:
        - slug
        - name
        - body
    UpdateFunctionBody:
      type: object
      properties:
        name:
          type: string
        body:
          type: string
        verify_jwt:
          type: boolean
    UpdateCustomHostnameBody:
      type: object
      properties: {}
    RemoveNetworkBanRequest:
      type: object
      properties: {}
    NetworkRestrictionsRequest:
      type: object
      properties: {}
    UpdatePgsodiumConfigBody:
      type: object
      properties: {}
    UpdatePostgrestConfigBody:
      type: object
      properties:
        max_rows:
          type: integer
      required:
        - max_rows
    CreateSecretBody:
      type: object
      properties: {}
    SslEnforcementRequest:
      type: object
      properties: {}
    VanitySubdomainBody:
      type: object
      properties: {}
    UpgradeDatabaseBody:
      type: object
      properties: {}
    UpdateProviderBody:
      type: object
      properties: {}
    CreateProviderBody:
      type: object
      properties:
        type:
          type: string
          description: What type of provider will be created
          enum:
            - saml
      required:
        - type
