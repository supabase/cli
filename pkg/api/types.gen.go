// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package api

const (
	ApiKeyHeaderScopes = "apiKeyHeader.Scopes"
	ApiKeyParamScopes  = "apiKeyParam.Scopes"
	BearerScopes       = "bearer.Scopes"
)

// Defines values for CreateProjectBodyPlan.
const (
	Free CreateProjectBodyPlan = "free"
	Pro  CreateProjectBodyPlan = "pro"
)

// Defines values for CreateProjectBodyRegion.
const (
	Ams          CreateProjectBodyRegion = "ams"
	ApNortheast1 CreateProjectBodyRegion = "ap-northeast-1"
	ApNortheast2 CreateProjectBodyRegion = "ap-northeast-2"
	ApSouth1     CreateProjectBodyRegion = "ap-south-1"
	ApSoutheast1 CreateProjectBodyRegion = "ap-southeast-1"
	ApSoutheast2 CreateProjectBodyRegion = "ap-southeast-2"
	Arn          CreateProjectBodyRegion = "arn"
	Bog          CreateProjectBodyRegion = "bog"
	Bos          CreateProjectBodyRegion = "bos"
	CaCentral1   CreateProjectBodyRegion = "ca-central-1"
	Cdg          CreateProjectBodyRegion = "cdg"
	Den          CreateProjectBodyRegion = "den"
	Dfw          CreateProjectBodyRegion = "dfw"
	EuCentral1   CreateProjectBodyRegion = "eu-central-1"
	EuWest1      CreateProjectBodyRegion = "eu-west-1"
	EuWest2      CreateProjectBodyRegion = "eu-west-2"
	EuWest3      CreateProjectBodyRegion = "eu-west-3"
	Ewr          CreateProjectBodyRegion = "ewr"
	Fra          CreateProjectBodyRegion = "fra"
	Gdl          CreateProjectBodyRegion = "gdl"
	Gig          CreateProjectBodyRegion = "gig"
	Gru          CreateProjectBodyRegion = "gru"
	Hkg          CreateProjectBodyRegion = "hkg"
	Iad          CreateProjectBodyRegion = "iad"
	Jnb          CreateProjectBodyRegion = "jnb"
	Lax          CreateProjectBodyRegion = "lax"
	Lhr          CreateProjectBodyRegion = "lhr"
	Maa          CreateProjectBodyRegion = "maa"
	Mad          CreateProjectBodyRegion = "mad"
	Mia          CreateProjectBodyRegion = "mia"
	Nrt          CreateProjectBodyRegion = "nrt"
	Ord          CreateProjectBodyRegion = "ord"
	Otp          CreateProjectBodyRegion = "otp"
	Qro          CreateProjectBodyRegion = "qro"
	SaEast1      CreateProjectBodyRegion = "sa-east-1"
	Scl          CreateProjectBodyRegion = "scl"
	Sea          CreateProjectBodyRegion = "sea"
	Sin          CreateProjectBodyRegion = "sin"
	Sjc          CreateProjectBodyRegion = "sjc"
	Syd          CreateProjectBodyRegion = "syd"
	UsEast1      CreateProjectBodyRegion = "us-east-1"
	UsWest1      CreateProjectBodyRegion = "us-west-1"
	UsWest2      CreateProjectBodyRegion = "us-west-2"
	Waw          CreateProjectBodyRegion = "waw"
	Yul          CreateProjectBodyRegion = "yul"
	Yyz          CreateProjectBodyRegion = "yyz"
)

// Defines values for CreateProviderBodyType.
const (
	Saml CreateProviderBodyType = "saml"
)

// Defines values for DatabaseUpgradeStatusError.
const (
	N1UpgradedInstanceLaunchFailed                 DatabaseUpgradeStatusError = "1_upgraded_instance_launch_failed"
	N2VolumeDetachchmentFromUpgradedInstanceFailed DatabaseUpgradeStatusError = "2_volume_detachchment_from_upgraded_instance_failed"
	N3VolumeAttachmentToOriginalInstanceFailed     DatabaseUpgradeStatusError = "3_volume_attachment_to_original_instance_failed"
	N4DataUpgradeInitiationFailed                  DatabaseUpgradeStatusError = "4_data_upgrade_initiation_failed"
	N5DataUpgradeCompletionFailed                  DatabaseUpgradeStatusError = "5_data_upgrade_completion_failed"
	N6VolumeDetachchmentFromOriginalInstanceFailed DatabaseUpgradeStatusError = "6_volume_detachchment_from_original_instance_failed"
	N7VolumeAttachmentToUpgradedInstanceFailed     DatabaseUpgradeStatusError = "7_volume_attachment_to_upgraded_instance_failed"
	N8UpgradeCompletionFailed                      DatabaseUpgradeStatusError = "8_upgrade_completion_failed"
)

// Defines values for DatabaseUpgradeStatusProgress.
const (
	N1Started                            DatabaseUpgradeStatusProgress = "1_started"
	N2LaunchedUpgradedInstance           DatabaseUpgradeStatusProgress = "2_launched_upgraded_instance"
	N3DetachedVolumeFromUpgradedInstance DatabaseUpgradeStatusProgress = "3_detached_volume_from_upgraded_instance"
	N4AttachedVolumeToOriginalInstance   DatabaseUpgradeStatusProgress = "4_attached_volume_to_original_instance"
	N5InitiatedDataUpgrade               DatabaseUpgradeStatusProgress = "5_initiated_data_upgrade"
	N6CompletedDataUpgrade               DatabaseUpgradeStatusProgress = "6_completed_data_upgrade"
	N7DetachedVolumeFromOriginalInstance DatabaseUpgradeStatusProgress = "7_detached_volume_from_original_instance"
	N8AttachedVolumeToUpgradedInstance   DatabaseUpgradeStatusProgress = "8_attached_volume_to_upgraded_instance"
	N9CompletedUpgrade                   DatabaseUpgradeStatusProgress = "9_completed_upgrade"
)

// Defines values for DatabaseUpgradeStatusStatus.
const (
	N0 DatabaseUpgradeStatusStatus = 0
	N1 DatabaseUpgradeStatusStatus = 1
	N2 DatabaseUpgradeStatusStatus = 2
)

// Defines values for FunctionResponseStatus.
const (
	FunctionResponseStatusACTIVE    FunctionResponseStatus = "ACTIVE"
	FunctionResponseStatusREMOVED   FunctionResponseStatus = "REMOVED"
	FunctionResponseStatusTHROTTLED FunctionResponseStatus = "THROTTLED"
)

// Defines values for FunctionSlugResponseStatus.
const (
	FunctionSlugResponseStatusACTIVE    FunctionSlugResponseStatus = "ACTIVE"
	FunctionSlugResponseStatusREMOVED   FunctionSlugResponseStatus = "REMOVED"
	FunctionSlugResponseStatusTHROTTLED FunctionSlugResponseStatus = "THROTTLED"
)

// Defines values for NetworkRestrictionsResponseEntitlement.
const (
	Allowed    NetworkRestrictionsResponseEntitlement = "allowed"
	Disallowed NetworkRestrictionsResponseEntitlement = "disallowed"
)

// Defines values for NetworkRestrictionsResponseStatus.
const (
	Applied NetworkRestrictionsResponseStatus = "applied"
	Stored  NetworkRestrictionsResponseStatus = "stored"
)

// Defines values for UpdateCustomHostnameResponseStatus.
const (
	N1NotStarted           UpdateCustomHostnameResponseStatus = "1_not_started"
	N2Initiated            UpdateCustomHostnameResponseStatus = "2_initiated"
	N3ChallengeVerified    UpdateCustomHostnameResponseStatus = "3_challenge_verified"
	N4OriginSetupCompleted UpdateCustomHostnameResponseStatus = "4_origin_setup_completed"
	N5ServicesReconfigured UpdateCustomHostnameResponseStatus = "5_services_reconfigured"
)

// Defines values for VanitySubdomainConfigResponseStatus.
const (
	Active           VanitySubdomainConfigResponseStatus = "active"
	CustomDomainUsed VanitySubdomainConfigResponseStatus = "custom-domain-used"
	NotUsed          VanitySubdomainConfigResponseStatus = "not-used"
)

// ActivateVanitySubdomainResponse defines model for ActivateVanitySubdomainResponse.
type ActivateVanitySubdomainResponse struct {
	CustomDomain string `json:"custom_domain"`
}

// AttributeMapping defines model for AttributeMapping.
type AttributeMapping struct {
	Keys map[string]AttributeValue `json:"keys"`
}

// AttributeValue defines model for AttributeValue.
type AttributeValue struct {
	Default *map[string]interface{} `json:"default,omitempty"`
	Name    *string                 `json:"name,omitempty"`
	Names   *[]string               `json:"names,omitempty"`
}

// CreateFunctionBody defines model for CreateFunctionBody.
type CreateFunctionBody struct {
	Body      string `json:"body"`
	Name      string `json:"name"`
	Slug      string `json:"slug"`
	VerifyJwt *bool  `json:"verify_jwt,omitempty"`
}

// CreateOrganizationBody defines model for CreateOrganizationBody.
type CreateOrganizationBody struct {
	Name string `json:"name"`
}

// CreateProjectBody defines model for CreateProjectBody.
type CreateProjectBody struct {
	DbPass         string                  `json:"db_pass"`
	KpsEnabled     *bool                   `json:"kps_enabled,omitempty"`
	Name           string                  `json:"name"`
	OrganizationId string                  `json:"organization_id"`
	Plan           CreateProjectBodyPlan   `json:"plan"`
	Region         CreateProjectBodyRegion `json:"region"`
}

// CreateProjectBodyPlan defines model for CreateProjectBody.Plan.
type CreateProjectBodyPlan string

// CreateProjectBodyRegion defines model for CreateProjectBody.Region.
type CreateProjectBodyRegion string

// CreateProviderBody defines model for CreateProviderBody.
type CreateProviderBody struct {
	AttributeMapping *AttributeMapping `json:"attribute_mapping,omitempty"`
	Domains          *[]string         `json:"domains,omitempty"`
	MetadataUrl      *string           `json:"metadata_url,omitempty"`
	MetadataXml      *string           `json:"metadata_xml,omitempty"`

	// Type What type of provider will be created
	Type CreateProviderBodyType `json:"type"`
}

// CreateProviderBodyType What type of provider will be created
type CreateProviderBodyType string

// CreateProviderResponse defines model for CreateProviderResponse.
type CreateProviderResponse struct {
	CreatedAt *string         `json:"created_at,omitempty"`
	Domains   *[]Domain       `json:"domains,omitempty"`
	Id        string          `json:"id"`
	Saml      *SamlDescriptor `json:"saml,omitempty"`
	UpdatedAt *string         `json:"updated_at,omitempty"`
}

// CreateSecretBody defines model for CreateSecretBody.
type CreateSecretBody struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// DatabaseResponse defines model for DatabaseResponse.
type DatabaseResponse struct {
	Host    string `json:"host"`
	Version string `json:"version"`
}

// DatabaseUpgradeStatus defines model for DatabaseUpgradeStatus.
type DatabaseUpgradeStatus struct {
	Error         *DatabaseUpgradeStatusError    `json:"error,omitempty"`
	InitiatedAt   string                         `json:"initiated_at"`
	Progress      *DatabaseUpgradeStatusProgress `json:"progress,omitempty"`
	Status        DatabaseUpgradeStatusStatus    `json:"status"`
	TargetVersion float32                        `json:"target_version"`
}

// DatabaseUpgradeStatusError defines model for DatabaseUpgradeStatus.Error.
type DatabaseUpgradeStatusError string

// DatabaseUpgradeStatusProgress defines model for DatabaseUpgradeStatus.Progress.
type DatabaseUpgradeStatusProgress string

// DatabaseUpgradeStatusStatus defines model for DatabaseUpgradeStatus.Status.
type DatabaseUpgradeStatusStatus float32

// DatabaseUpgradeStatusResponse defines model for DatabaseUpgradeStatusResponse.
type DatabaseUpgradeStatusResponse struct {
	DatabaseUpgradeStatus *DatabaseUpgradeStatus `json:"databaseUpgradeStatus"`
}

// DeleteProviderResponse defines model for DeleteProviderResponse.
type DeleteProviderResponse struct {
	CreatedAt *string         `json:"created_at,omitempty"`
	Domains   *[]Domain       `json:"domains,omitempty"`
	Id        string          `json:"id"`
	Saml      *SamlDescriptor `json:"saml,omitempty"`
	UpdatedAt *string         `json:"updated_at,omitempty"`
}

// Domain defines model for Domain.
type Domain struct {
	CreatedAt *string `json:"created_at,omitempty"`
	Domain    *string `json:"domain,omitempty"`
	Id        string  `json:"id"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// FunctionResponse defines model for FunctionResponse.
type FunctionResponse struct {
	CreatedAt float32                `json:"created_at"`
	Id        string                 `json:"id"`
	ImportMap *bool                  `json:"import_map,omitempty"`
	Name      string                 `json:"name"`
	Slug      string                 `json:"slug"`
	Status    FunctionResponseStatus `json:"status"`
	UpdatedAt float32                `json:"updated_at"`
	VerifyJwt *bool                  `json:"verify_jwt,omitempty"`
	Version   float32                `json:"version"`
}

// FunctionResponseStatus defines model for FunctionResponse.Status.
type FunctionResponseStatus string

// FunctionSlugResponse defines model for FunctionSlugResponse.
type FunctionSlugResponse struct {
	CreatedAt float32                    `json:"created_at"`
	Id        string                     `json:"id"`
	ImportMap *bool                      `json:"import_map,omitempty"`
	Name      string                     `json:"name"`
	Slug      string                     `json:"slug"`
	Status    FunctionSlugResponseStatus `json:"status"`
	UpdatedAt float32                    `json:"updated_at"`
	VerifyJwt *bool                      `json:"verify_jwt,omitempty"`
	Version   float32                    `json:"version"`
}

// FunctionSlugResponseStatus defines model for FunctionSlugResponse.Status.
type FunctionSlugResponseStatus string

// GetProviderResponse defines model for GetProviderResponse.
type GetProviderResponse struct {
	CreatedAt *string         `json:"created_at,omitempty"`
	Domains   *[]Domain       `json:"domains,omitempty"`
	Id        string          `json:"id"`
	Saml      *SamlDescriptor `json:"saml,omitempty"`
	UpdatedAt *string         `json:"updated_at,omitempty"`
}

// ListProvidersResponse defines model for ListProvidersResponse.
type ListProvidersResponse struct {
	Items []Provider `json:"items"`
}

// NetworkBanResponse defines model for NetworkBanResponse.
type NetworkBanResponse struct {
	BannedIpv4Addresses []string `json:"banned_ipv4_addresses"`
}

// NetworkRestrictionsRequest defines model for NetworkRestrictionsRequest.
type NetworkRestrictionsRequest struct {
	DbAllowedCidrs []string `json:"dbAllowedCidrs"`
}

// NetworkRestrictionsResponse defines model for NetworkRestrictionsResponse.
type NetworkRestrictionsResponse struct {
	Config      NetworkRestrictionsRequest             `json:"config"`
	Entitlement NetworkRestrictionsResponseEntitlement `json:"entitlement"`
	OldConfig   *NetworkRestrictionsRequest            `json:"old_config,omitempty"`
	Status      NetworkRestrictionsResponseStatus      `json:"status"`
}

// NetworkRestrictionsResponseEntitlement defines model for NetworkRestrictionsResponse.Entitlement.
type NetworkRestrictionsResponseEntitlement string

// NetworkRestrictionsResponseStatus defines model for NetworkRestrictionsResponse.Status.
type NetworkRestrictionsResponseStatus string

// OrganizationResponse defines model for OrganizationResponse.
type OrganizationResponse struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// PgsodiumConfigResponse defines model for PgsodiumConfigResponse.
type PgsodiumConfigResponse struct {
	RootKey string `json:"root_key"`
}

// PostgrestConfigResponse defines model for PostgrestConfigResponse.
type PostgrestConfigResponse struct {
	DbExtraSearchPath string `json:"db_extra_search_path"`
	DbSchema          string `json:"db_schema"`
	MaxRows           int    `json:"max_rows"`
}

// ProjectResponse defines model for ProjectResponse.
type ProjectResponse struct {
	CreatedAt      string            `json:"created_at"`
	Database       *DatabaseResponse `json:"database,omitempty"`
	Id             string            `json:"id"`
	Name           string            `json:"name"`
	OrganizationId string            `json:"organization_id"`
	Region         string            `json:"region"`
}

// ProjectUpgradeEligibilityResponse defines model for ProjectUpgradeEligibilityResponse.
type ProjectUpgradeEligibilityResponse struct {
	CurrentAppVersion          string           `json:"current_app_version"`
	Eligible                   bool             `json:"eligible"`
	LatestAppVersion           string           `json:"latest_app_version"`
	PotentialBreakingChanges   []string         `json:"potential_breaking_changes"`
	RequiresManualIntervention *string          `json:"requires_manual_intervention"`
	TargetUpgradeVersions      []ProjectVersion `json:"target_upgrade_versions"`
}

// ProjectVersion defines model for ProjectVersion.
type ProjectVersion struct {
	AppVersion      string  `json:"app_version"`
	PostgresVersion float32 `json:"postgres_version"`
}

// Provider defines model for Provider.
type Provider struct {
	CreatedAt *string         `json:"created_at,omitempty"`
	Domains   *[]Domain       `json:"domains,omitempty"`
	Id        string          `json:"id"`
	Saml      *SamlDescriptor `json:"saml,omitempty"`
	UpdatedAt *string         `json:"updated_at,omitempty"`
}

// ReadOnlyStatusResponse defines model for ReadOnlyStatusResponse.
type ReadOnlyStatusResponse struct {
	Enabled             bool   `json:"enabled"`
	OverrideActiveUntil string `json:"override_active_until"`
	OverrideEnabled     bool   `json:"override_enabled"`
}

// RemoveNetworkBanRequest defines model for RemoveNetworkBanRequest.
type RemoveNetworkBanRequest struct {
	Ipv4Addresses []string `json:"ipv4_addresses"`
}

// SamlDescriptor defines model for SamlDescriptor.
type SamlDescriptor struct {
	AttributeMapping *AttributeMapping `json:"attribute_mapping,omitempty"`
	MetadataUrl      *string           `json:"metadata_url,omitempty"`
	MetadataXml      *string           `json:"metadata_xml,omitempty"`
}

// SecretResponse defines model for SecretResponse.
type SecretResponse struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// SslEnforcementRequest defines model for SslEnforcementRequest.
type SslEnforcementRequest struct {
	RequestedConfig SslEnforcements `json:"requestedConfig"`
}

// SslEnforcementResponse defines model for SslEnforcementResponse.
type SslEnforcementResponse struct {
	AppliedSuccessfully bool            `json:"appliedSuccessfully"`
	CurrentConfig       SslEnforcements `json:"currentConfig"`
}

// SslEnforcements defines model for SslEnforcements.
type SslEnforcements struct {
	Database bool `json:"database"`
}

// SubdomainAvailabilityResponse defines model for SubdomainAvailabilityResponse.
type SubdomainAvailabilityResponse struct {
	Available bool `json:"available"`
}

// TypescriptResponse defines model for TypescriptResponse.
type TypescriptResponse struct {
	Types string `json:"types"`
}

// UpdateCustomHostnameBody defines model for UpdateCustomHostnameBody.
type UpdateCustomHostnameBody struct {
	CustomHostname string `json:"custom_hostname"`
}

// UpdateCustomHostnameResponse defines model for UpdateCustomHostnameResponse.
type UpdateCustomHostnameResponse struct {
	CustomHostname string                             `json:"custom_hostname"`
	Data           map[string]interface{}             `json:"data"`
	Status         UpdateCustomHostnameResponseStatus `json:"status"`
}

// UpdateCustomHostnameResponseStatus defines model for UpdateCustomHostnameResponse.Status.
type UpdateCustomHostnameResponseStatus string

// UpdateFunctionBody defines model for UpdateFunctionBody.
type UpdateFunctionBody struct {
	Body      *string `json:"body,omitempty"`
	Name      *string `json:"name,omitempty"`
	VerifyJwt *bool   `json:"verify_jwt,omitempty"`
}

// UpdatePgsodiumConfigBody defines model for UpdatePgsodiumConfigBody.
type UpdatePgsodiumConfigBody struct {
	RootKey string `json:"root_key"`
}

// UpdatePostgrestConfigBody defines model for UpdatePostgrestConfigBody.
type UpdatePostgrestConfigBody struct {
	DbExtraSearchPath *string `json:"db_extra_search_path,omitempty"`
	DbSchema          *string `json:"db_schema,omitempty"`
	MaxRows           *int    `json:"max_rows,omitempty"`
}

// UpdateProviderBody defines model for UpdateProviderBody.
type UpdateProviderBody struct {
	AttributeMapping *AttributeMapping `json:"attribute_mapping,omitempty"`
	Domains          *[]string         `json:"domains,omitempty"`
	MetadataUrl      *string           `json:"metadata_url,omitempty"`
	MetadataXml      *string           `json:"metadata_xml,omitempty"`
}

// UpdateProviderResponse defines model for UpdateProviderResponse.
type UpdateProviderResponse struct {
	CreatedAt *string         `json:"created_at,omitempty"`
	Domains   *[]Domain       `json:"domains,omitempty"`
	Id        string          `json:"id"`
	Saml      *SamlDescriptor `json:"saml,omitempty"`
	UpdatedAt *string         `json:"updated_at,omitempty"`
}

// UpgradeDatabaseBody defines model for UpgradeDatabaseBody.
type UpgradeDatabaseBody struct {
	TargetVersion float32 `json:"target_version"`
}

// VanitySubdomainBody defines model for VanitySubdomainBody.
type VanitySubdomainBody struct {
	VanitySubdomain string `json:"vanity_subdomain"`
}

// VanitySubdomainConfigResponse defines model for VanitySubdomainConfigResponse.
type VanitySubdomainConfigResponse struct {
	CustomDomain *string                             `json:"custom_domain,omitempty"`
	Status       VanitySubdomainConfigResponseStatus `json:"status"`
}

// VanitySubdomainConfigResponseStatus defines model for VanitySubdomainConfigResponse.Status.
type VanitySubdomainConfigResponseStatus string

// CreateFunctionParams defines parameters for CreateFunction.
type CreateFunctionParams struct {
	Slug      *string `form:"slug,omitempty" json:"slug,omitempty"`
	Name      *string `form:"name,omitempty" json:"name,omitempty"`
	VerifyJwt *bool   `form:"verify_jwt,omitempty" json:"verify_jwt,omitempty"`
	ImportMap *bool   `form:"import_map,omitempty" json:"import_map,omitempty"`
}

// UpdateFunctionParams defines parameters for UpdateFunction.
type UpdateFunctionParams struct {
	Slug      *string `form:"slug,omitempty" json:"slug,omitempty"`
	Name      *string `form:"name,omitempty" json:"name,omitempty"`
	VerifyJwt *bool   `form:"verify_jwt,omitempty" json:"verify_jwt,omitempty"`
	ImportMap *bool   `form:"import_map,omitempty" json:"import_map,omitempty"`
}

// DeleteSecretsJSONBody defines parameters for DeleteSecrets.
type DeleteSecretsJSONBody = []string

// CreateSecretsJSONBody defines parameters for CreateSecrets.
type CreateSecretsJSONBody = []CreateSecretBody

// GetTypescriptTypesParams defines parameters for GetTypescriptTypes.
type GetTypescriptTypesParams struct {
	IncludedSchemas *string `form:"included_schemas,omitempty" json:"included_schemas,omitempty"`
}

// CreateOrganizationJSONRequestBody defines body for CreateOrganization for application/json ContentType.
type CreateOrganizationJSONRequestBody = CreateOrganizationBody

// CreateProjectJSONRequestBody defines body for CreateProject for application/json ContentType.
type CreateProjectJSONRequestBody = CreateProjectBody

// CreateProviderForProjectJSONRequestBody defines body for CreateProviderForProject for application/json ContentType.
type CreateProviderForProjectJSONRequestBody = CreateProviderBody

// UpdateProviderByIdJSONRequestBody defines body for UpdateProviderById for application/json ContentType.
type UpdateProviderByIdJSONRequestBody = UpdateProviderBody

// CreateCustomHostnameConfigJSONRequestBody defines body for CreateCustomHostnameConfig for application/json ContentType.
type CreateCustomHostnameConfigJSONRequestBody = UpdateCustomHostnameBody

// CreateFunctionJSONRequestBody defines body for CreateFunction for application/json ContentType.
type CreateFunctionJSONRequestBody = CreateFunctionBody

// UpdateFunctionJSONRequestBody defines body for UpdateFunction for application/json ContentType.
type UpdateFunctionJSONRequestBody = UpdateFunctionBody

// RemoveNetworkBanJSONRequestBody defines body for RemoveNetworkBan for application/json ContentType.
type RemoveNetworkBanJSONRequestBody = RemoveNetworkBanRequest

// ApplyNetworkRestrictionsJSONRequestBody defines body for ApplyNetworkRestrictions for application/json ContentType.
type ApplyNetworkRestrictionsJSONRequestBody = NetworkRestrictionsRequest

// UpdateConfigJSONRequestBody defines body for UpdateConfig for application/json ContentType.
type UpdateConfigJSONRequestBody = UpdatePgsodiumConfigBody

// UpdatePostgRESTConfigJSONRequestBody defines body for UpdatePostgRESTConfig for application/json ContentType.
type UpdatePostgRESTConfigJSONRequestBody = UpdatePostgrestConfigBody

// DeleteSecretsJSONRequestBody defines body for DeleteSecrets for application/json ContentType.
type DeleteSecretsJSONRequestBody = DeleteSecretsJSONBody

// CreateSecretsJSONRequestBody defines body for CreateSecrets for application/json ContentType.
type CreateSecretsJSONRequestBody = CreateSecretsJSONBody

// UpdateSslEnforcementConfigJSONRequestBody defines body for UpdateSslEnforcementConfig for application/json ContentType.
type UpdateSslEnforcementConfigJSONRequestBody = SslEnforcementRequest

// UpgradeProjectJSONRequestBody defines body for UpgradeProject for application/json ContentType.
type UpgradeProjectJSONRequestBody = UpgradeDatabaseBody

// ActivateVanitySubdomainPleaseJSONRequestBody defines body for ActivateVanitySubdomainPlease for application/json ContentType.
type ActivateVanitySubdomainPleaseJSONRequestBody = VanitySubdomainBody

// CheckVanitySubdomainAvailabilityJSONRequestBody defines body for CheckVanitySubdomainAvailability for application/json ContentType.
type CheckVanitySubdomainAvailabilityJSONRequestBody = VanitySubdomainBody
