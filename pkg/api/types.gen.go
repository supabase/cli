// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"encoding/json"

	"github.com/oapi-codegen/runtime"
)

const (
	BearerScopes = "bearer.Scopes"
)

// Defines values for BillingPlanId.
const (
	BillingPlanIdEnterprise BillingPlanId = "enterprise"
	BillingPlanIdFree       BillingPlanId = "free"
	BillingPlanIdPro        BillingPlanId = "pro"
	BillingPlanIdTeam       BillingPlanId = "team"
)

// Defines values for BranchDetailResponseStatus.
const (
	BranchDetailResponseStatusACTIVEHEALTHY   BranchDetailResponseStatus = "ACTIVE_HEALTHY"
	BranchDetailResponseStatusACTIVEUNHEALTHY BranchDetailResponseStatus = "ACTIVE_UNHEALTHY"
	BranchDetailResponseStatusCOMINGUP        BranchDetailResponseStatus = "COMING_UP"
	BranchDetailResponseStatusGOINGDOWN       BranchDetailResponseStatus = "GOING_DOWN"
	BranchDetailResponseStatusINACTIVE        BranchDetailResponseStatus = "INACTIVE"
	BranchDetailResponseStatusINITFAILED      BranchDetailResponseStatus = "INIT_FAILED"
	BranchDetailResponseStatusPAUSING         BranchDetailResponseStatus = "PAUSING"
	BranchDetailResponseStatusREMOVED         BranchDetailResponseStatus = "REMOVED"
	BranchDetailResponseStatusRESTORING       BranchDetailResponseStatus = "RESTORING"
	BranchDetailResponseStatusUNKNOWN         BranchDetailResponseStatus = "UNKNOWN"
	BranchDetailResponseStatusUPGRADING       BranchDetailResponseStatus = "UPGRADING"
)

// Defines values for CreateProjectBodyPlan.
const (
	CreateProjectBodyPlanFree CreateProjectBodyPlan = "free"
	CreateProjectBodyPlanPro  CreateProjectBodyPlan = "pro"
)

// Defines values for CreateProjectBodyRegion.
const (
	CreateProjectBodyRegionApEast1      CreateProjectBodyRegion = "ap-east-1"
	CreateProjectBodyRegionApNortheast1 CreateProjectBodyRegion = "ap-northeast-1"
	CreateProjectBodyRegionApNortheast2 CreateProjectBodyRegion = "ap-northeast-2"
	CreateProjectBodyRegionApSouth1     CreateProjectBodyRegion = "ap-south-1"
	CreateProjectBodyRegionApSoutheast1 CreateProjectBodyRegion = "ap-southeast-1"
	CreateProjectBodyRegionApSoutheast2 CreateProjectBodyRegion = "ap-southeast-2"
	CreateProjectBodyRegionCaCentral1   CreateProjectBodyRegion = "ca-central-1"
	CreateProjectBodyRegionEuCentral1   CreateProjectBodyRegion = "eu-central-1"
	CreateProjectBodyRegionEuWest1      CreateProjectBodyRegion = "eu-west-1"
	CreateProjectBodyRegionEuWest2      CreateProjectBodyRegion = "eu-west-2"
	CreateProjectBodyRegionEuWest3      CreateProjectBodyRegion = "eu-west-3"
	CreateProjectBodyRegionSaEast1      CreateProjectBodyRegion = "sa-east-1"
	CreateProjectBodyRegionUsEast1      CreateProjectBodyRegion = "us-east-1"
	CreateProjectBodyRegionUsWest1      CreateProjectBodyRegion = "us-west-1"
	CreateProjectBodyRegionUsWest2      CreateProjectBodyRegion = "us-west-2"
)

// Defines values for CreateProviderBodyType.
const (
	Saml CreateProviderBodyType = "saml"
)

// Defines values for DatabaseUpgradeStatusError.
const (
	N1UpgradedInstanceLaunchFailed                 DatabaseUpgradeStatusError = "1_upgraded_instance_launch_failed"
	N2VolumeDetachchmentFromUpgradedInstanceFailed DatabaseUpgradeStatusError = "2_volume_detachchment_from_upgraded_instance_failed"
	N3VolumeAttachmentToOriginalInstanceFailed     DatabaseUpgradeStatusError = "3_volume_attachment_to_original_instance_failed"
	N4DataUpgradeInitiationFailed                  DatabaseUpgradeStatusError = "4_data_upgrade_initiation_failed"
	N5DataUpgradeCompletionFailed                  DatabaseUpgradeStatusError = "5_data_upgrade_completion_failed"
	N6VolumeDetachchmentFromOriginalInstanceFailed DatabaseUpgradeStatusError = "6_volume_detachchment_from_original_instance_failed"
	N7VolumeAttachmentToUpgradedInstanceFailed     DatabaseUpgradeStatusError = "7_volume_attachment_to_upgraded_instance_failed"
	N8UpgradeCompletionFailed                      DatabaseUpgradeStatusError = "8_upgrade_completion_failed"
)

// Defines values for DatabaseUpgradeStatusProgress.
const (
	N0Requested                          DatabaseUpgradeStatusProgress = "0_requested"
	N1Started                            DatabaseUpgradeStatusProgress = "1_started"
	N2LaunchedUpgradedInstance           DatabaseUpgradeStatusProgress = "2_launched_upgraded_instance"
	N3DetachedVolumeFromUpgradedInstance DatabaseUpgradeStatusProgress = "3_detached_volume_from_upgraded_instance"
	N4AttachedVolumeToOriginalInstance   DatabaseUpgradeStatusProgress = "4_attached_volume_to_original_instance"
	N5InitiatedDataUpgrade               DatabaseUpgradeStatusProgress = "5_initiated_data_upgrade"
	N6CompletedDataUpgrade               DatabaseUpgradeStatusProgress = "6_completed_data_upgrade"
	N7DetachedVolumeFromOriginalInstance DatabaseUpgradeStatusProgress = "7_detached_volume_from_original_instance"
	N8AttachedVolumeToUpgradedInstance   DatabaseUpgradeStatusProgress = "8_attached_volume_to_upgraded_instance"
	N9CompletedUpgrade                   DatabaseUpgradeStatusProgress = "9_completed_upgrade"
)

// Defines values for DatabaseUpgradeStatusStatus.
const (
	N0 DatabaseUpgradeStatusStatus = 0
	N1 DatabaseUpgradeStatusStatus = 1
	N2 DatabaseUpgradeStatusStatus = 2
)

// Defines values for FunctionResponseStatus.
const (
	FunctionResponseStatusACTIVE    FunctionResponseStatus = "ACTIVE"
	FunctionResponseStatusREMOVED   FunctionResponseStatus = "REMOVED"
	FunctionResponseStatusTHROTTLED FunctionResponseStatus = "THROTTLED"
)

// Defines values for FunctionSlugResponseStatus.
const (
	FunctionSlugResponseStatusACTIVE    FunctionSlugResponseStatus = "ACTIVE"
	FunctionSlugResponseStatusREMOVED   FunctionSlugResponseStatus = "REMOVED"
	FunctionSlugResponseStatusTHROTTLED FunctionSlugResponseStatus = "THROTTLED"
)

// Defines values for NetworkRestrictionsResponseEntitlement.
const (
	Allowed    NetworkRestrictionsResponseEntitlement = "allowed"
	Disallowed NetworkRestrictionsResponseEntitlement = "disallowed"
)

// Defines values for NetworkRestrictionsResponseStatus.
const (
	Applied NetworkRestrictionsResponseStatus = "applied"
	Stored  NetworkRestrictionsResponseStatus = "stored"
)

// Defines values for OAuthTokenBodyGrantType.
const (
	AuthorizationCode OAuthTokenBodyGrantType = "authorization_code"
	RefreshToken      OAuthTokenBodyGrantType = "refresh_token"
)

// Defines values for OAuthTokenResponseTokenType.
const (
	Bearer OAuthTokenResponseTokenType = "Bearer"
)

// Defines values for PostgresConfigResponseSessionReplicationRole.
const (
	PostgresConfigResponseSessionReplicationRoleLocal   PostgresConfigResponseSessionReplicationRole = "local"
	PostgresConfigResponseSessionReplicationRoleOrigin  PostgresConfigResponseSessionReplicationRole = "origin"
	PostgresConfigResponseSessionReplicationRoleReplica PostgresConfigResponseSessionReplicationRole = "replica"
)

// Defines values for ServiceHealthResponseName.
const (
	ServiceHealthResponseNameAuth     ServiceHealthResponseName = "auth"
	ServiceHealthResponseNameDb       ServiceHealthResponseName = "db"
	ServiceHealthResponseNamePooler   ServiceHealthResponseName = "pooler"
	ServiceHealthResponseNameRealtime ServiceHealthResponseName = "realtime"
	ServiceHealthResponseNameRest     ServiceHealthResponseName = "rest"
	ServiceHealthResponseNameStorage  ServiceHealthResponseName = "storage"
)

// Defines values for ServiceHealthResponseStatus.
const (
	ACTIVEHEALTHY ServiceHealthResponseStatus = "ACTIVE_HEALTHY"
	COMINGUP      ServiceHealthResponseStatus = "COMING_UP"
	UNHEALTHY     ServiceHealthResponseStatus = "UNHEALTHY"
)

// Defines values for SetUpReadReplicaBodyReadReplicaRegion.
const (
	SetUpReadReplicaBodyReadReplicaRegionApEast1      SetUpReadReplicaBodyReadReplicaRegion = "ap-east-1"
	SetUpReadReplicaBodyReadReplicaRegionApNortheast1 SetUpReadReplicaBodyReadReplicaRegion = "ap-northeast-1"
	SetUpReadReplicaBodyReadReplicaRegionApNortheast2 SetUpReadReplicaBodyReadReplicaRegion = "ap-northeast-2"
	SetUpReadReplicaBodyReadReplicaRegionApSouth1     SetUpReadReplicaBodyReadReplicaRegion = "ap-south-1"
	SetUpReadReplicaBodyReadReplicaRegionApSoutheast1 SetUpReadReplicaBodyReadReplicaRegion = "ap-southeast-1"
	SetUpReadReplicaBodyReadReplicaRegionApSoutheast2 SetUpReadReplicaBodyReadReplicaRegion = "ap-southeast-2"
	SetUpReadReplicaBodyReadReplicaRegionCaCentral1   SetUpReadReplicaBodyReadReplicaRegion = "ca-central-1"
	SetUpReadReplicaBodyReadReplicaRegionEuCentral1   SetUpReadReplicaBodyReadReplicaRegion = "eu-central-1"
	SetUpReadReplicaBodyReadReplicaRegionEuWest1      SetUpReadReplicaBodyReadReplicaRegion = "eu-west-1"
	SetUpReadReplicaBodyReadReplicaRegionEuWest2      SetUpReadReplicaBodyReadReplicaRegion = "eu-west-2"
	SetUpReadReplicaBodyReadReplicaRegionEuWest3      SetUpReadReplicaBodyReadReplicaRegion = "eu-west-3"
	SetUpReadReplicaBodyReadReplicaRegionSaEast1      SetUpReadReplicaBodyReadReplicaRegion = "sa-east-1"
	SetUpReadReplicaBodyReadReplicaRegionUsEast1      SetUpReadReplicaBodyReadReplicaRegion = "us-east-1"
	SetUpReadReplicaBodyReadReplicaRegionUsWest1      SetUpReadReplicaBodyReadReplicaRegion = "us-west-1"
	SetUpReadReplicaBodyReadReplicaRegionUsWest2      SetUpReadReplicaBodyReadReplicaRegion = "us-west-2"
)

// Defines values for SnippetMetaType.
const (
	SnippetMetaTypeSql SnippetMetaType = "sql"
)

// Defines values for SnippetMetaVisibility.
const (
	SnippetMetaVisibilityOrg     SnippetMetaVisibility = "org"
	SnippetMetaVisibilityProject SnippetMetaVisibility = "project"
	SnippetMetaVisibilityPublic  SnippetMetaVisibility = "public"
	SnippetMetaVisibilityUser    SnippetMetaVisibility = "user"
)

// Defines values for SnippetResponseType.
const (
	SnippetResponseTypeSql SnippetResponseType = "sql"
)

// Defines values for SnippetResponseVisibility.
const (
	SnippetResponseVisibilityOrg     SnippetResponseVisibility = "org"
	SnippetResponseVisibilityProject SnippetResponseVisibility = "project"
	SnippetResponseVisibilityPublic  SnippetResponseVisibility = "public"
	SnippetResponseVisibilityUser    SnippetResponseVisibility = "user"
)

// Defines values for UpdateCustomHostnameResponseStatus.
const (
	N1NotStarted           UpdateCustomHostnameResponseStatus = "1_not_started"
	N2Initiated            UpdateCustomHostnameResponseStatus = "2_initiated"
	N3ChallengeVerified    UpdateCustomHostnameResponseStatus = "3_challenge_verified"
	N4OriginSetupCompleted UpdateCustomHostnameResponseStatus = "4_origin_setup_completed"
	N5ServicesReconfigured UpdateCustomHostnameResponseStatus = "5_services_reconfigured"
)

// Defines values for UpdatePostgresConfigBodySessionReplicationRole.
const (
	UpdatePostgresConfigBodySessionReplicationRoleLocal   UpdatePostgresConfigBodySessionReplicationRole = "local"
	UpdatePostgresConfigBodySessionReplicationRoleOrigin  UpdatePostgresConfigBodySessionReplicationRole = "origin"
	UpdatePostgresConfigBodySessionReplicationRoleReplica UpdatePostgresConfigBodySessionReplicationRole = "replica"
)

// Defines values for V1BackupStatus.
const (
	V1BackupStatusARCHIVED  V1BackupStatus = "ARCHIVED"
	V1BackupStatusCOMPLETED V1BackupStatus = "COMPLETED"
	V1BackupStatusFAILED    V1BackupStatus = "FAILED"
	V1BackupStatusPENDING   V1BackupStatus = "PENDING"
	V1BackupStatusREMOVED   V1BackupStatus = "REMOVED"
)

// Defines values for V1OrganizationSlugResponseOptInTags.
const (
	AISQLGENERATOROPTIN  V1OrganizationSlugResponseOptInTags = "AI_SQL_GENERATOR_OPT_IN"
	PREVIEWBRANCHESOPTIN V1OrganizationSlugResponseOptInTags = "PREVIEW_BRANCHES_OPT_IN"
)

// Defines values for V1PgbouncerConfigResponsePoolMode.
const (
	Session     V1PgbouncerConfigResponsePoolMode = "session"
	Statement   V1PgbouncerConfigResponsePoolMode = "statement"
	Transaction V1PgbouncerConfigResponsePoolMode = "transaction"
)

// Defines values for VanitySubdomainConfigResponseStatus.
const (
	Active           VanitySubdomainConfigResponseStatus = "active"
	CustomDomainUsed VanitySubdomainConfigResponseStatus = "custom-domain-used"
	NotUsed          VanitySubdomainConfigResponseStatus = "not-used"
)

// Defines values for AuthorizeParamsResponseType.
const (
	Code         AuthorizeParamsResponseType = "code"
	IdTokenToken AuthorizeParamsResponseType = "id_token token"
	Token        AuthorizeParamsResponseType = "token"
)

// Defines values for AuthorizeParamsCodeChallengeMethod.
const (
	Plain  AuthorizeParamsCodeChallengeMethod = "plain"
	S256   AuthorizeParamsCodeChallengeMethod = "S256"
	Sha256 AuthorizeParamsCodeChallengeMethod = "sha256"
)

// Defines values for CheckServiceHealthParamsServices.
const (
	CheckServiceHealthParamsServicesAuth     CheckServiceHealthParamsServices = "auth"
	CheckServiceHealthParamsServicesDb       CheckServiceHealthParamsServices = "db"
	CheckServiceHealthParamsServicesPooler   CheckServiceHealthParamsServices = "pooler"
	CheckServiceHealthParamsServicesRealtime CheckServiceHealthParamsServices = "realtime"
	CheckServiceHealthParamsServicesRest     CheckServiceHealthParamsServices = "rest"
	CheckServiceHealthParamsServicesStorage  CheckServiceHealthParamsServices = "storage"
)

// ActivateVanitySubdomainResponse defines model for ActivateVanitySubdomainResponse.
type ActivateVanitySubdomainResponse struct {
	CustomDomain string `json:"custom_domain"`
}

// ApiKeyResponse defines model for ApiKeyResponse.
type ApiKeyResponse struct {
	ApiKey string `json:"api_key"`
	Name   string `json:"name"`
}

// AttributeMapping defines model for AttributeMapping.
type AttributeMapping struct {
	Keys map[string]AttributeValue `json:"keys"`
}

// AttributeValue defines model for AttributeValue.
type AttributeValue struct {
	Default *AttributeValue_Default `json:"default,omitempty"`
	Name    *string                 `json:"name,omitempty"`
	Names   *[]string               `json:"names,omitempty"`
}

// AttributeValueDefault0 defines model for .
type AttributeValueDefault0 = map[string]interface{}

// AttributeValueDefault1 defines model for .
type AttributeValueDefault1 = float32

// AttributeValueDefault2 defines model for .
type AttributeValueDefault2 = string

// AttributeValueDefault3 defines model for .
type AttributeValueDefault3 = bool

// AttributeValue_Default defines model for AttributeValue.Default.
type AttributeValue_Default struct {
	union json.RawMessage
}

// AuthConfigResponse defines model for AuthConfigResponse.
type AuthConfigResponse struct {
	RateLimitEmailSent *float32 `json:"rate_limit_email_sent,omitempty"`
	SmtpAdminEmail     *string  `json:"smtp_admin_email,omitempty"`
	SmtpHost           *string  `json:"smtp_host,omitempty"`
	SmtpMaxFrequency   *float32 `json:"smtp_max_frequency,omitempty"`
	SmtpPass           *string  `json:"smtp_pass,omitempty"`
	SmtpPort           *string  `json:"smtp_port,omitempty"`
	SmtpSenderName     *string  `json:"smtp_sender_name,omitempty"`
	SmtpUser           *string  `json:"smtp_user,omitempty"`
}

// AuthHealthResponse defines model for AuthHealthResponse.
type AuthHealthResponse struct {
	Description string `json:"description"`
	Name        string `json:"name"`
	Version     string `json:"version"`
}

// BillingPlanId defines model for BillingPlanId.
type BillingPlanId string

// BranchDetailResponse defines model for BranchDetailResponse.
type BranchDetailResponse struct {
	DbHost          string                     `json:"db_host"`
	DbPass          *string                    `json:"db_pass,omitempty"`
	DbPort          int                        `json:"db_port"`
	DbUser          *string                    `json:"db_user,omitempty"`
	JwtSecret       *string                    `json:"jwt_secret,omitempty"`
	PostgresVersion string                     `json:"postgres_version"`
	Ref             string                     `json:"ref"`
	Status          BranchDetailResponseStatus `json:"status"`
}

// BranchDetailResponseStatus defines model for BranchDetailResponse.Status.
type BranchDetailResponseStatus string

// BranchResponse defines model for BranchResponse.
type BranchResponse struct {
	CreatedAt        string   `json:"created_at"`
	GitBranch        *string  `json:"git_branch,omitempty"`
	Id               string   `json:"id"`
	IsDefault        bool     `json:"is_default"`
	Name             string   `json:"name"`
	ParentProjectRef string   `json:"parent_project_ref"`
	PrNumber         *float32 `json:"pr_number,omitempty"`
	ProjectRef       string   `json:"project_ref"`
	ResetOnPush      bool     `json:"reset_on_push"`
	UpdatedAt        string   `json:"updated_at"`
}

// CreateBranchBody defines model for CreateBranchBody.
type CreateBranchBody struct {
	BranchName string  `json:"branch_name"`
	GitBranch  *string `json:"git_branch,omitempty"`
	Region     *string `json:"region,omitempty"`
}

// CreateFunctionBody defines model for CreateFunctionBody.
type CreateFunctionBody struct {
	Body      string `json:"body"`
	Name      string `json:"name"`
	Slug      string `json:"slug"`
	VerifyJwt *bool  `json:"verify_jwt,omitempty"`
}

// CreateOrganizationBodyV1 defines model for CreateOrganizationBodyV1.
type CreateOrganizationBodyV1 struct {
	Name string `json:"name"`
}

// CreateProjectBody defines model for CreateProjectBody.
type CreateProjectBody struct {
	// DbPass Database password
	DbPass string `json:"db_pass"`
	// Deprecated:
	KpsEnabled *bool `json:"kps_enabled,omitempty"`

	// Name Name of your project, should not contain dots
	Name string `json:"name"`

	// OrganizationId Slug of your organization
	OrganizationId string `json:"organization_id"`

	// Plan Subscription plan is now set on organization level and is ignored in this request
	// Deprecated:
	Plan CreateProjectBodyPlan `json:"plan"`

	// Region Region you want your server to reside in
	Region CreateProjectBodyRegion `json:"region"`
}

// CreateProjectBodyPlan Subscription plan is now set on organization level and is ignored in this request
type CreateProjectBodyPlan string

// CreateProjectBodyRegion Region you want your server to reside in
type CreateProjectBodyRegion string

// CreateProviderBody defines model for CreateProviderBody.
type CreateProviderBody struct {
	AttributeMapping *AttributeMapping `json:"attribute_mapping,omitempty"`
	Domains          *[]string         `json:"domains,omitempty"`
	MetadataUrl      *string           `json:"metadata_url,omitempty"`
	MetadataXml      *string           `json:"metadata_xml,omitempty"`

	// Type What type of provider will be created
	Type CreateProviderBodyType `json:"type"`
}

// CreateProviderBodyType What type of provider will be created
type CreateProviderBodyType string

// CreateProviderResponse defines model for CreateProviderResponse.
type CreateProviderResponse struct {
	CreatedAt *string         `json:"created_at,omitempty"`
	Domains   *[]Domain       `json:"domains,omitempty"`
	Id        string          `json:"id"`
	Saml      *SamlDescriptor `json:"saml,omitempty"`
	UpdatedAt *string         `json:"updated_at,omitempty"`
}

// CreateSecretBody defines model for CreateSecretBody.
type CreateSecretBody struct {
	// Name Secret name must not start with the SUPABASE_ prefix.
	Name  string `json:"name"`
	Value string `json:"value"`
}

// DatabaseResponse defines model for DatabaseResponse.
type DatabaseResponse struct {
	// Host Database host
	Host string `json:"host"`

	// Version Database version
	Version string `json:"version"`
}

// DatabaseUpgradeStatus defines model for DatabaseUpgradeStatus.
type DatabaseUpgradeStatus struct {
	Error         *DatabaseUpgradeStatusError    `json:"error,omitempty"`
	InitiatedAt   string                         `json:"initiated_at"`
	Progress      *DatabaseUpgradeStatusProgress `json:"progress,omitempty"`
	Status        DatabaseUpgradeStatusStatus    `json:"status"`
	TargetVersion float32                        `json:"target_version"`
}

// DatabaseUpgradeStatusError defines model for DatabaseUpgradeStatus.Error.
type DatabaseUpgradeStatusError string

// DatabaseUpgradeStatusProgress defines model for DatabaseUpgradeStatus.Progress.
type DatabaseUpgradeStatusProgress string

// DatabaseUpgradeStatusStatus defines model for DatabaseUpgradeStatus.Status.
type DatabaseUpgradeStatusStatus float32

// DatabaseUpgradeStatusResponse defines model for DatabaseUpgradeStatusResponse.
type DatabaseUpgradeStatusResponse struct {
	DatabaseUpgradeStatus *DatabaseUpgradeStatus `json:"databaseUpgradeStatus"`
}

// DeleteProviderResponse defines model for DeleteProviderResponse.
type DeleteProviderResponse struct {
	CreatedAt *string         `json:"created_at,omitempty"`
	Domains   *[]Domain       `json:"domains,omitempty"`
	Id        string          `json:"id"`
	Saml      *SamlDescriptor `json:"saml,omitempty"`
	UpdatedAt *string         `json:"updated_at,omitempty"`
}

// Domain defines model for Domain.
type Domain struct {
	CreatedAt *string `json:"created_at,omitempty"`
	Domain    *string `json:"domain,omitempty"`
	Id        string  `json:"id"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// FunctionResponse defines model for FunctionResponse.
type FunctionResponse struct {
	CreatedAt      float32                `json:"created_at"`
	EntrypointPath *string                `json:"entrypoint_path,omitempty"`
	Id             string                 `json:"id"`
	ImportMap      *bool                  `json:"import_map,omitempty"`
	ImportMapPath  *string                `json:"import_map_path,omitempty"`
	Name           string                 `json:"name"`
	Slug           string                 `json:"slug"`
	Status         FunctionResponseStatus `json:"status"`
	UpdatedAt      float32                `json:"updated_at"`
	VerifyJwt      *bool                  `json:"verify_jwt,omitempty"`
	Version        float32                `json:"version"`
}

// FunctionResponseStatus defines model for FunctionResponse.Status.
type FunctionResponseStatus string

// FunctionSlugResponse defines model for FunctionSlugResponse.
type FunctionSlugResponse struct {
	CreatedAt      float32                    `json:"created_at"`
	EntrypointPath *string                    `json:"entrypoint_path,omitempty"`
	Id             string                     `json:"id"`
	ImportMap      *bool                      `json:"import_map,omitempty"`
	ImportMapPath  *string                    `json:"import_map_path,omitempty"`
	Name           string                     `json:"name"`
	Slug           string                     `json:"slug"`
	Status         FunctionSlugResponseStatus `json:"status"`
	UpdatedAt      float32                    `json:"updated_at"`
	VerifyJwt      *bool                      `json:"verify_jwt,omitempty"`
	Version        float32                    `json:"version"`
}

// FunctionSlugResponseStatus defines model for FunctionSlugResponse.Status.
type FunctionSlugResponseStatus string

// GetProviderResponse defines model for GetProviderResponse.
type GetProviderResponse struct {
	CreatedAt *string         `json:"created_at,omitempty"`
	Domains   *[]Domain       `json:"domains,omitempty"`
	Id        string          `json:"id"`
	Saml      *SamlDescriptor `json:"saml,omitempty"`
	UpdatedAt *string         `json:"updated_at,omitempty"`
}

// ListProvidersResponse defines model for ListProvidersResponse.
type ListProvidersResponse struct {
	Items []Provider `json:"items"`
}

// NetworkBanResponse defines model for NetworkBanResponse.
type NetworkBanResponse struct {
	BannedIpv4Addresses []string `json:"banned_ipv4_addresses"`
}

// NetworkRestrictionsRequest defines model for NetworkRestrictionsRequest.
type NetworkRestrictionsRequest struct {
	DbAllowedCidrs   *[]string `json:"dbAllowedCidrs,omitempty"`
	DbAllowedCidrsV6 *[]string `json:"dbAllowedCidrsV6,omitempty"`
}

// NetworkRestrictionsResponse defines model for NetworkRestrictionsResponse.
type NetworkRestrictionsResponse struct {
	Config      NetworkRestrictionsRequest             `json:"config"`
	Entitlement NetworkRestrictionsResponseEntitlement `json:"entitlement"`
	OldConfig   *NetworkRestrictionsRequest            `json:"old_config,omitempty"`
	Status      NetworkRestrictionsResponseStatus      `json:"status"`
}

// NetworkRestrictionsResponseEntitlement defines model for NetworkRestrictionsResponse.Entitlement.
type NetworkRestrictionsResponseEntitlement string

// NetworkRestrictionsResponseStatus defines model for NetworkRestrictionsResponse.Status.
type NetworkRestrictionsResponseStatus string

// OAuthTokenBody defines model for OAuthTokenBody.
type OAuthTokenBody struct {
	ClientId     string                  `json:"client_id"`
	ClientSecret string                  `json:"client_secret"`
	Code         *string                 `json:"code,omitempty"`
	CodeVerifier *string                 `json:"code_verifier,omitempty"`
	GrantType    OAuthTokenBodyGrantType `json:"grant_type"`
	RedirectUri  *string                 `json:"redirect_uri,omitempty"`
	RefreshToken *string                 `json:"refresh_token,omitempty"`
}

// OAuthTokenBodyGrantType defines model for OAuthTokenBody.GrantType.
type OAuthTokenBodyGrantType string

// OAuthTokenResponse defines model for OAuthTokenResponse.
type OAuthTokenResponse struct {
	AccessToken  string                      `json:"access_token"`
	ExpiresIn    float32                     `json:"expires_in"`
	RefreshToken string                      `json:"refresh_token"`
	TokenType    OAuthTokenResponseTokenType `json:"token_type"`
}

// OAuthTokenResponseTokenType defines model for OAuthTokenResponse.TokenType.
type OAuthTokenResponseTokenType string

// OrganizationResponseV1 defines model for OrganizationResponseV1.
type OrganizationResponseV1 struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// PgsodiumConfigResponse defines model for PgsodiumConfigResponse.
type PgsodiumConfigResponse struct {
	RootKey string `json:"root_key"`
}

// PhysicalBackup defines model for PhysicalBackup.
type PhysicalBackup struct {
	EarliestPhysicalBackupDateUnix *float32 `json:"earliest_physical_backup_date_unix,omitempty"`
	LatestPhysicalBackupDateUnix   *float32 `json:"latest_physical_backup_date_unix,omitempty"`
}

// PostgresConfigResponse defines model for PostgresConfigResponse.
type PostgresConfigResponse struct {
	EffectiveCacheSize            *string                                       `json:"effective_cache_size,omitempty"`
	MaintenanceWorkMem            *string                                       `json:"maintenance_work_mem,omitempty"`
	MaxConnections                *int                                          `json:"max_connections,omitempty"`
	MaxLocksPerTransaction        *int                                          `json:"max_locks_per_transaction,omitempty"`
	MaxParallelMaintenanceWorkers *int                                          `json:"max_parallel_maintenance_workers,omitempty"`
	MaxParallelWorkers            *int                                          `json:"max_parallel_workers,omitempty"`
	MaxParallelWorkersPerGather   *int                                          `json:"max_parallel_workers_per_gather,omitempty"`
	MaxWorkerProcesses            *int                                          `json:"max_worker_processes,omitempty"`
	SessionReplicationRole        *PostgresConfigResponseSessionReplicationRole `json:"session_replication_role,omitempty"`
	SharedBuffers                 *string                                       `json:"shared_buffers,omitempty"`
	StatementTimeout              *string                                       `json:"statement_timeout,omitempty"`
	WorkMem                       *string                                       `json:"work_mem,omitempty"`
}

// PostgresConfigResponseSessionReplicationRole defines model for PostgresConfigResponse.SessionReplicationRole.
type PostgresConfigResponseSessionReplicationRole string

// PostgrestConfigResponse defines model for PostgrestConfigResponse.
type PostgrestConfigResponse struct {
	DbExtraSearchPath string `json:"db_extra_search_path"`
	DbSchema          string `json:"db_schema"`
	MaxRows           int    `json:"max_rows"`
}

// PostgrestConfigWithJWTSecretResponse defines model for PostgrestConfigWithJWTSecretResponse.
type PostgrestConfigWithJWTSecretResponse struct {
	DbExtraSearchPath string  `json:"db_extra_search_path"`
	DbSchema          string  `json:"db_schema"`
	JwtSecret         *string `json:"jwt_secret,omitempty"`
	MaxRows           int     `json:"max_rows"`
}

// ProjectRefResponse defines model for ProjectRefResponse.
type ProjectRefResponse struct {
	Id   float32 `json:"id"`
	Name string  `json:"name"`
	Ref  string  `json:"ref"`
}

// ProjectResponse defines model for ProjectResponse.
type ProjectResponse struct {
	// CreatedAt Creation timestamp
	CreatedAt string            `json:"created_at"`
	Database  *DatabaseResponse `json:"database,omitempty"`

	// Id Id of your project
	Id string `json:"id"`

	// Name Name of your project
	Name string `json:"name"`

	// OrganizationId Slug of your organization
	OrganizationId string `json:"organization_id"`

	// Region Region of your project
	Region string `json:"region"`
}

// ProjectUpgradeEligibilityResponse defines model for ProjectUpgradeEligibilityResponse.
type ProjectUpgradeEligibilityResponse struct {
	CurrentAppVersion         string           `json:"current_app_version"`
	DurationEstimateHours     float32          `json:"duration_estimate_hours"`
	Eligible                  bool             `json:"eligible"`
	ExtensionDependentObjects []string         `json:"extension_dependent_objects"`
	LatestAppVersion          string           `json:"latest_app_version"`
	LegacyAuthCustomRoles     []string         `json:"legacy_auth_custom_roles"`
	PotentialBreakingChanges  []string         `json:"potential_breaking_changes"`
	TargetUpgradeVersions     []ProjectVersion `json:"target_upgrade_versions"`
}

// ProjectUpgradeInitiateResponse defines model for ProjectUpgradeInitiateResponse.
type ProjectUpgradeInitiateResponse struct {
	TrackingId string `json:"tracking_id"`
}

// ProjectVersion defines model for ProjectVersion.
type ProjectVersion struct {
	AppVersion      string  `json:"app_version"`
	PostgresVersion float32 `json:"postgres_version"`
}

// Provider defines model for Provider.
type Provider struct {
	CreatedAt *string         `json:"created_at,omitempty"`
	Domains   *[]Domain       `json:"domains,omitempty"`
	Id        string          `json:"id"`
	Saml      *SamlDescriptor `json:"saml,omitempty"`
	UpdatedAt *string         `json:"updated_at,omitempty"`
}

// ReadOnlyStatusResponse defines model for ReadOnlyStatusResponse.
type ReadOnlyStatusResponse struct {
	Enabled             bool   `json:"enabled"`
	OverrideActiveUntil string `json:"override_active_until"`
	OverrideEnabled     bool   `json:"override_enabled"`
}

// RealtimeHealthResponse defines model for RealtimeHealthResponse.
type RealtimeHealthResponse struct {
	ConnectedCluster float32 `json:"connected_cluster"`
	DbConnected      bool    `json:"db_connected"`
	Healthy          bool    `json:"healthy"`
}

// RemoveNetworkBanRequest defines model for RemoveNetworkBanRequest.
type RemoveNetworkBanRequest struct {
	Ipv4Addresses []string `json:"ipv4_addresses"`
}

// RemoveReadReplicaBody defines model for RemoveReadReplicaBody.
type RemoveReadReplicaBody struct {
	DatabaseIdentifier string `json:"database_identifier"`
}

// RunQueryBody defines model for RunQueryBody.
type RunQueryBody struct {
	Query string `json:"query"`
}

// SamlDescriptor defines model for SamlDescriptor.
type SamlDescriptor struct {
	AttributeMapping *AttributeMapping `json:"attribute_mapping,omitempty"`
	EntityId         string            `json:"entity_id"`
	Id               string            `json:"id"`
	MetadataUrl      *string           `json:"metadata_url,omitempty"`
	MetadataXml      *string           `json:"metadata_xml,omitempty"`
}

// SecretResponse defines model for SecretResponse.
type SecretResponse struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// ServiceHealthResponse defines model for ServiceHealthResponse.
type ServiceHealthResponse struct {
	Error   *string                     `json:"error,omitempty"`
	Healthy bool                        `json:"healthy"`
	Info    *ServiceHealthResponse_Info `json:"info,omitempty"`
	Name    ServiceHealthResponseName   `json:"name"`
	Status  ServiceHealthResponseStatus `json:"status"`
}

// ServiceHealthResponse_Info defines model for ServiceHealthResponse.Info.
type ServiceHealthResponse_Info struct {
	union json.RawMessage
}

// ServiceHealthResponseName defines model for ServiceHealthResponse.Name.
type ServiceHealthResponseName string

// ServiceHealthResponseStatus defines model for ServiceHealthResponse.Status.
type ServiceHealthResponseStatus string

// SetUpReadReplicaBody defines model for SetUpReadReplicaBody.
type SetUpReadReplicaBody struct {
	// ReadReplicaRegion Region you want your read replica to reside in
	ReadReplicaRegion SetUpReadReplicaBodyReadReplicaRegion `json:"read_replica_region"`
}

// SetUpReadReplicaBodyReadReplicaRegion Region you want your read replica to reside in
type SetUpReadReplicaBodyReadReplicaRegion string

// SnippetContent defines model for SnippetContent.
type SnippetContent struct {
	Favorite      bool   `json:"favorite"`
	SchemaVersion string `json:"schema_version"`
	Sql           string `json:"sql"`
}

// SnippetList defines model for SnippetList.
type SnippetList struct {
	Data []SnippetMeta `json:"data"`
}

// SnippetMeta defines model for SnippetMeta.
type SnippetMeta struct {
	Description *string               `json:"description"`
	Id          string                `json:"id"`
	InsertedAt  string                `json:"inserted_at"`
	Name        string                `json:"name"`
	Owner       SnippetUser           `json:"owner"`
	Project     SnippetProject        `json:"project"`
	Type        SnippetMetaType       `json:"type"`
	UpdatedAt   string                `json:"updated_at"`
	UpdatedBy   SnippetUser           `json:"updated_by"`
	Visibility  SnippetMetaVisibility `json:"visibility"`
}

// SnippetMetaType defines model for SnippetMeta.Type.
type SnippetMetaType string

// SnippetMetaVisibility defines model for SnippetMeta.Visibility.
type SnippetMetaVisibility string

// SnippetProject defines model for SnippetProject.
type SnippetProject struct {
	Id   float32 `json:"id"`
	Name string  `json:"name"`
}

// SnippetResponse defines model for SnippetResponse.
type SnippetResponse struct {
	Content     SnippetContent            `json:"content"`
	Description *string                   `json:"description"`
	Id          string                    `json:"id"`
	InsertedAt  string                    `json:"inserted_at"`
	Name        string                    `json:"name"`
	Owner       SnippetUser               `json:"owner"`
	Project     SnippetProject            `json:"project"`
	Type        SnippetResponseType       `json:"type"`
	UpdatedAt   string                    `json:"updated_at"`
	UpdatedBy   SnippetUser               `json:"updated_by"`
	Visibility  SnippetResponseVisibility `json:"visibility"`
}

// SnippetResponseType defines model for SnippetResponse.Type.
type SnippetResponseType string

// SnippetResponseVisibility defines model for SnippetResponse.Visibility.
type SnippetResponseVisibility string

// SnippetUser defines model for SnippetUser.
type SnippetUser struct {
	Id       float32 `json:"id"`
	Username string  `json:"username"`
}

// SslEnforcementRequest defines model for SslEnforcementRequest.
type SslEnforcementRequest struct {
	RequestedConfig SslEnforcements `json:"requestedConfig"`
}

// SslEnforcementResponse defines model for SslEnforcementResponse.
type SslEnforcementResponse struct {
	AppliedSuccessfully bool            `json:"appliedSuccessfully"`
	CurrentConfig       SslEnforcements `json:"currentConfig"`
}

// SslEnforcements defines model for SslEnforcements.
type SslEnforcements struct {
	Database bool `json:"database"`
}

// SubdomainAvailabilityResponse defines model for SubdomainAvailabilityResponse.
type SubdomainAvailabilityResponse struct {
	Available bool `json:"available"`
}

// TypescriptResponse defines model for TypescriptResponse.
type TypescriptResponse struct {
	Types string `json:"types"`
}

// UpdateAuthConfigBody defines model for UpdateAuthConfigBody.
type UpdateAuthConfigBody struct {
	RateLimitEmailSent *float32 `json:"rate_limit_email_sent,omitempty"`
	SmtpAdminEmail     *string  `json:"smtp_admin_email,omitempty"`
	SmtpHost           *string  `json:"smtp_host,omitempty"`
	SmtpMaxFrequency   *float32 `json:"smtp_max_frequency,omitempty"`
	SmtpPass           *string  `json:"smtp_pass,omitempty"`
	SmtpPort           *string  `json:"smtp_port,omitempty"`
	SmtpSenderName     *string  `json:"smtp_sender_name,omitempty"`
	SmtpUser           *string  `json:"smtp_user,omitempty"`
}

// UpdateBranchBody defines model for UpdateBranchBody.
type UpdateBranchBody struct {
	BranchName  *string `json:"branch_name,omitempty"`
	GitBranch   *string `json:"git_branch,omitempty"`
	ResetOnPush *bool   `json:"reset_on_push,omitempty"`
}

// UpdateCustomHostnameBody defines model for UpdateCustomHostnameBody.
type UpdateCustomHostnameBody struct {
	CustomHostname string `json:"custom_hostname"`
}

// UpdateCustomHostnameResponse defines model for UpdateCustomHostnameResponse.
type UpdateCustomHostnameResponse struct {
	CustomHostname string                             `json:"custom_hostname"`
	Data           map[string]interface{}             `json:"data"`
	Status         UpdateCustomHostnameResponseStatus `json:"status"`
}

// UpdateCustomHostnameResponseStatus defines model for UpdateCustomHostnameResponse.Status.
type UpdateCustomHostnameResponseStatus string

// UpdateFunctionBody defines model for UpdateFunctionBody.
type UpdateFunctionBody struct {
	Body      *string `json:"body,omitempty"`
	Name      *string `json:"name,omitempty"`
	VerifyJwt *bool   `json:"verify_jwt,omitempty"`
}

// UpdatePgsodiumConfigBody defines model for UpdatePgsodiumConfigBody.
type UpdatePgsodiumConfigBody struct {
	RootKey string `json:"root_key"`
}

// UpdatePostgresConfigBody defines model for UpdatePostgresConfigBody.
type UpdatePostgresConfigBody struct {
	EffectiveCacheSize            *string                                         `json:"effective_cache_size,omitempty"`
	MaintenanceWorkMem            *string                                         `json:"maintenance_work_mem,omitempty"`
	MaxConnections                *int                                            `json:"max_connections,omitempty"`
	MaxLocksPerTransaction        *int                                            `json:"max_locks_per_transaction,omitempty"`
	MaxParallelMaintenanceWorkers *int                                            `json:"max_parallel_maintenance_workers,omitempty"`
	MaxParallelWorkers            *int                                            `json:"max_parallel_workers,omitempty"`
	MaxParallelWorkersPerGather   *int                                            `json:"max_parallel_workers_per_gather,omitempty"`
	MaxWorkerProcesses            *int                                            `json:"max_worker_processes,omitempty"`
	SessionReplicationRole        *UpdatePostgresConfigBodySessionReplicationRole `json:"session_replication_role,omitempty"`
	SharedBuffers                 *string                                         `json:"shared_buffers,omitempty"`
	StatementTimeout              *string                                         `json:"statement_timeout,omitempty"`
	WorkMem                       *string                                         `json:"work_mem,omitempty"`
}

// UpdatePostgresConfigBodySessionReplicationRole defines model for UpdatePostgresConfigBody.SessionReplicationRole.
type UpdatePostgresConfigBodySessionReplicationRole string

// UpdatePostgrestConfigBody defines model for UpdatePostgrestConfigBody.
type UpdatePostgrestConfigBody struct {
	DbExtraSearchPath *string `json:"db_extra_search_path,omitempty"`
	DbSchema          *string `json:"db_schema,omitempty"`
	MaxRows           *int    `json:"max_rows,omitempty"`
}

// UpdateProviderBody defines model for UpdateProviderBody.
type UpdateProviderBody struct {
	AttributeMapping *AttributeMapping `json:"attribute_mapping,omitempty"`
	Domains          *[]string         `json:"domains,omitempty"`
	MetadataUrl      *string           `json:"metadata_url,omitempty"`
	MetadataXml      *string           `json:"metadata_xml,omitempty"`
}

// UpdateProviderResponse defines model for UpdateProviderResponse.
type UpdateProviderResponse struct {
	CreatedAt *string         `json:"created_at,omitempty"`
	Domains   *[]Domain       `json:"domains,omitempty"`
	Id        string          `json:"id"`
	Saml      *SamlDescriptor `json:"saml,omitempty"`
	UpdatedAt *string         `json:"updated_at,omitempty"`
}

// UpgradeDatabaseBody defines model for UpgradeDatabaseBody.
type UpgradeDatabaseBody struct {
	TargetVersion float32 `json:"target_version"`
}

// V1Backup defines model for V1Backup.
type V1Backup struct {
	InsertedAt       string         `json:"inserted_at"`
	IsPhysicalBackup bool           `json:"is_physical_backup"`
	Status           V1BackupStatus `json:"status"`
}

// V1BackupStatus defines model for V1Backup.Status.
type V1BackupStatus string

// V1BackupsResponse defines model for V1BackupsResponse.
type V1BackupsResponse struct {
	Backups            []V1Backup     `json:"backups"`
	PhysicalBackupData PhysicalBackup `json:"physical_backup_data"`
	PitrEnabled        bool           `json:"pitr_enabled"`
	Region             string         `json:"region"`
	WalgEnabled        bool           `json:"walg_enabled"`
}

// V1OrganizationMemberResponse defines model for V1OrganizationMemberResponse.
type V1OrganizationMemberResponse struct {
	Email      *string `json:"email,omitempty"`
	MfaEnabled bool    `json:"mfa_enabled"`
	RoleName   string  `json:"role_name"`
	UserId     string  `json:"user_id"`
	UserName   string  `json:"user_name"`
}

// V1OrganizationSlugResponse defines model for V1OrganizationSlugResponse.
type V1OrganizationSlugResponse struct {
	Id        string                                `json:"id"`
	Name      string                                `json:"name"`
	OptInTags []V1OrganizationSlugResponseOptInTags `json:"opt_in_tags"`
	Plan      *BillingPlanId                        `json:"plan,omitempty"`
}

// V1OrganizationSlugResponseOptInTags defines model for V1OrganizationSlugResponse.OptInTags.
type V1OrganizationSlugResponseOptInTags string

// V1PgbouncerConfigResponse defines model for V1PgbouncerConfigResponse.
type V1PgbouncerConfigResponse struct {
	ConnectionString        *string                            `json:"connection_string,omitempty"`
	DefaultPoolSize         *float32                           `json:"default_pool_size,omitempty"`
	IgnoreStartupParameters *string                            `json:"ignore_startup_parameters,omitempty"`
	MaxClientConn           *float32                           `json:"max_client_conn,omitempty"`
	PoolMode                *V1PgbouncerConfigResponsePoolMode `json:"pool_mode,omitempty"`
}

// V1PgbouncerConfigResponsePoolMode defines model for V1PgbouncerConfigResponse.PoolMode.
type V1PgbouncerConfigResponsePoolMode string

// V1RestorePitrBody defines model for V1RestorePitrBody.
type V1RestorePitrBody struct {
	RecoveryTimeTargetUnix float32 `json:"recovery_time_target_unix"`
}

// V1StorageBucketResponse defines model for V1StorageBucketResponse.
type V1StorageBucketResponse struct {
	CreatedAt string `json:"created_at"`
	Id        string `json:"id"`
	Name      string `json:"name"`
	Owner     string `json:"owner"`
	Public    bool   `json:"public"`
	UpdatedAt string `json:"updated_at"`
}

// VanitySubdomainBody defines model for VanitySubdomainBody.
type VanitySubdomainBody struct {
	VanitySubdomain string `json:"vanity_subdomain"`
}

// VanitySubdomainConfigResponse defines model for VanitySubdomainConfigResponse.
type VanitySubdomainConfigResponse struct {
	CustomDomain *string                             `json:"custom_domain,omitempty"`
	Status       VanitySubdomainConfigResponseStatus `json:"status"`
}

// VanitySubdomainConfigResponseStatus defines model for VanitySubdomainConfigResponse.Status.
type VanitySubdomainConfigResponseStatus string

// AuthorizeParams defines parameters for Authorize.
type AuthorizeParams struct {
	ClientId            string                              `form:"client_id" json:"client_id"`
	ResponseType        AuthorizeParamsResponseType         `form:"response_type" json:"response_type"`
	RedirectUri         string                              `form:"redirect_uri" json:"redirect_uri"`
	Scope               *string                             `form:"scope,omitempty" json:"scope,omitempty"`
	State               *string                             `form:"state,omitempty" json:"state,omitempty"`
	ResponseMode        *string                             `form:"response_mode,omitempty" json:"response_mode,omitempty"`
	CodeChallenge       *string                             `form:"code_challenge,omitempty" json:"code_challenge,omitempty"`
	CodeChallengeMethod *AuthorizeParamsCodeChallengeMethod `form:"code_challenge_method,omitempty" json:"code_challenge_method,omitempty"`
}

// AuthorizeParamsResponseType defines parameters for Authorize.
type AuthorizeParamsResponseType string

// AuthorizeParamsCodeChallengeMethod defines parameters for Authorize.
type AuthorizeParamsCodeChallengeMethod string

// CreateFunctionParams defines parameters for CreateFunction.
type CreateFunctionParams struct {
	Slug           *string `form:"slug,omitempty" json:"slug,omitempty"`
	Name           *string `form:"name,omitempty" json:"name,omitempty"`
	VerifyJwt      *bool   `form:"verify_jwt,omitempty" json:"verify_jwt,omitempty"`
	ImportMap      *bool   `form:"import_map,omitempty" json:"import_map,omitempty"`
	EntrypointPath *string `form:"entrypoint_path,omitempty" json:"entrypoint_path,omitempty"`
	ImportMapPath  *string `form:"import_map_path,omitempty" json:"import_map_path,omitempty"`
}

// UpdateFunctionParams defines parameters for UpdateFunction.
type UpdateFunctionParams struct {
	Slug           *string `form:"slug,omitempty" json:"slug,omitempty"`
	Name           *string `form:"name,omitempty" json:"name,omitempty"`
	VerifyJwt      *bool   `form:"verify_jwt,omitempty" json:"verify_jwt,omitempty"`
	ImportMap      *bool   `form:"import_map,omitempty" json:"import_map,omitempty"`
	EntrypointPath *string `form:"entrypoint_path,omitempty" json:"entrypoint_path,omitempty"`
	ImportMapPath  *string `form:"import_map_path,omitempty" json:"import_map_path,omitempty"`
}

// CheckServiceHealthParams defines parameters for CheckServiceHealth.
type CheckServiceHealthParams struct {
	TimeoutMs *int                               `form:"timeout_ms,omitempty" json:"timeout_ms,omitempty"`
	Services  []CheckServiceHealthParamsServices `form:"services" json:"services"`
}

// CheckServiceHealthParamsServices defines parameters for CheckServiceHealth.
type CheckServiceHealthParamsServices string

// DeleteSecretsJSONBody defines parameters for DeleteSecrets.
type DeleteSecretsJSONBody = []string

// CreateSecretsJSONBody defines parameters for CreateSecrets.
type CreateSecretsJSONBody = []CreateSecretBody

// GetTypescriptTypesParams defines parameters for GetTypescriptTypes.
type GetTypescriptTypesParams struct {
	IncludedSchemas *string `form:"included_schemas,omitempty" json:"included_schemas,omitempty"`
}

// ListSnippetsParams defines parameters for ListSnippets.
type ListSnippetsParams struct {
	ProjectRef *string `form:"project_ref,omitempty" json:"project_ref,omitempty"`
}

// UpdateBranchJSONRequestBody defines body for UpdateBranch for application/json ContentType.
type UpdateBranchJSONRequestBody = UpdateBranchBody

// TokenFormdataRequestBody defines body for Token for application/x-www-form-urlencoded ContentType.
type TokenFormdataRequestBody = OAuthTokenBody

// CreateOrganizationJSONRequestBody defines body for CreateOrganization for application/json ContentType.
type CreateOrganizationJSONRequestBody = CreateOrganizationBodyV1

// CreateProjectJSONRequestBody defines body for CreateProject for application/json ContentType.
type CreateProjectJSONRequestBody = CreateProjectBody

// CreateBranchJSONRequestBody defines body for CreateBranch for application/json ContentType.
type CreateBranchJSONRequestBody = CreateBranchBody

// UpdateV1AuthConfigJSONRequestBody defines body for UpdateV1AuthConfig for application/json ContentType.
type UpdateV1AuthConfigJSONRequestBody = UpdateAuthConfigBody

// CreateProviderForProjectJSONRequestBody defines body for CreateProviderForProject for application/json ContentType.
type CreateProviderForProjectJSONRequestBody = CreateProviderBody

// UpdateProviderByIdJSONRequestBody defines body for UpdateProviderById for application/json ContentType.
type UpdateProviderByIdJSONRequestBody = UpdateProviderBody

// UpdateConfigJSONRequestBody defines body for UpdateConfig for application/json ContentType.
type UpdateConfigJSONRequestBody = UpdatePostgresConfigBody

// CreateCustomHostnameConfigJSONRequestBody defines body for CreateCustomHostnameConfig for application/json ContentType.
type CreateCustomHostnameConfigJSONRequestBody = UpdateCustomHostnameBody

// V1RestorePitrJSONRequestBody defines body for V1RestorePitr for application/json ContentType.
type V1RestorePitrJSONRequestBody = V1RestorePitrBody

// V1RunQueryJSONRequestBody defines body for V1RunQuery for application/json ContentType.
type V1RunQueryJSONRequestBody = RunQueryBody

// CreateFunctionJSONRequestBody defines body for CreateFunction for application/json ContentType.
type CreateFunctionJSONRequestBody = CreateFunctionBody

// UpdateFunctionJSONRequestBody defines body for UpdateFunction for application/json ContentType.
type UpdateFunctionJSONRequestBody = UpdateFunctionBody

// RemoveNetworkBanJSONRequestBody defines body for RemoveNetworkBan for application/json ContentType.
type RemoveNetworkBanJSONRequestBody = RemoveNetworkBanRequest

// ApplyNetworkRestrictionsJSONRequestBody defines body for ApplyNetworkRestrictions for application/json ContentType.
type ApplyNetworkRestrictionsJSONRequestBody = NetworkRestrictionsRequest

// UpdatePgsodiumConfigJSONRequestBody defines body for UpdatePgsodiumConfig for application/json ContentType.
type UpdatePgsodiumConfigJSONRequestBody = UpdatePgsodiumConfigBody

// UpdatePostgRESTConfigJSONRequestBody defines body for UpdatePostgRESTConfig for application/json ContentType.
type UpdatePostgRESTConfigJSONRequestBody = UpdatePostgrestConfigBody

// RemoveReadReplicaJSONRequestBody defines body for RemoveReadReplica for application/json ContentType.
type RemoveReadReplicaJSONRequestBody = RemoveReadReplicaBody

// SetUpReadReplicaJSONRequestBody defines body for SetUpReadReplica for application/json ContentType.
type SetUpReadReplicaJSONRequestBody = SetUpReadReplicaBody

// DeleteSecretsJSONRequestBody defines body for DeleteSecrets for application/json ContentType.
type DeleteSecretsJSONRequestBody = DeleteSecretsJSONBody

// CreateSecretsJSONRequestBody defines body for CreateSecrets for application/json ContentType.
type CreateSecretsJSONRequestBody = CreateSecretsJSONBody

// UpdateSslEnforcementConfigJSONRequestBody defines body for UpdateSslEnforcementConfig for application/json ContentType.
type UpdateSslEnforcementConfigJSONRequestBody = SslEnforcementRequest

// UpgradeProjectJSONRequestBody defines body for UpgradeProject for application/json ContentType.
type UpgradeProjectJSONRequestBody = UpgradeDatabaseBody

// ActivateVanitySubdomainPleaseJSONRequestBody defines body for ActivateVanitySubdomainPlease for application/json ContentType.
type ActivateVanitySubdomainPleaseJSONRequestBody = VanitySubdomainBody

// CheckVanitySubdomainAvailabilityJSONRequestBody defines body for CheckVanitySubdomainAvailability for application/json ContentType.
type CheckVanitySubdomainAvailabilityJSONRequestBody = VanitySubdomainBody

// AsAttributeValueDefault0 returns the union data inside the AttributeValue_Default as a AttributeValueDefault0
func (t AttributeValue_Default) AsAttributeValueDefault0() (AttributeValueDefault0, error) {
	var body AttributeValueDefault0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAttributeValueDefault0 overwrites any union data inside the AttributeValue_Default as the provided AttributeValueDefault0
func (t *AttributeValue_Default) FromAttributeValueDefault0(v AttributeValueDefault0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAttributeValueDefault0 performs a merge with any union data inside the AttributeValue_Default, using the provided AttributeValueDefault0
func (t *AttributeValue_Default) MergeAttributeValueDefault0(v AttributeValueDefault0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsAttributeValueDefault1 returns the union data inside the AttributeValue_Default as a AttributeValueDefault1
func (t AttributeValue_Default) AsAttributeValueDefault1() (AttributeValueDefault1, error) {
	var body AttributeValueDefault1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAttributeValueDefault1 overwrites any union data inside the AttributeValue_Default as the provided AttributeValueDefault1
func (t *AttributeValue_Default) FromAttributeValueDefault1(v AttributeValueDefault1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAttributeValueDefault1 performs a merge with any union data inside the AttributeValue_Default, using the provided AttributeValueDefault1
func (t *AttributeValue_Default) MergeAttributeValueDefault1(v AttributeValueDefault1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsAttributeValueDefault2 returns the union data inside the AttributeValue_Default as a AttributeValueDefault2
func (t AttributeValue_Default) AsAttributeValueDefault2() (AttributeValueDefault2, error) {
	var body AttributeValueDefault2
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAttributeValueDefault2 overwrites any union data inside the AttributeValue_Default as the provided AttributeValueDefault2
func (t *AttributeValue_Default) FromAttributeValueDefault2(v AttributeValueDefault2) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAttributeValueDefault2 performs a merge with any union data inside the AttributeValue_Default, using the provided AttributeValueDefault2
func (t *AttributeValue_Default) MergeAttributeValueDefault2(v AttributeValueDefault2) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsAttributeValueDefault3 returns the union data inside the AttributeValue_Default as a AttributeValueDefault3
func (t AttributeValue_Default) AsAttributeValueDefault3() (AttributeValueDefault3, error) {
	var body AttributeValueDefault3
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAttributeValueDefault3 overwrites any union data inside the AttributeValue_Default as the provided AttributeValueDefault3
func (t *AttributeValue_Default) FromAttributeValueDefault3(v AttributeValueDefault3) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAttributeValueDefault3 performs a merge with any union data inside the AttributeValue_Default, using the provided AttributeValueDefault3
func (t *AttributeValue_Default) MergeAttributeValueDefault3(v AttributeValueDefault3) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t AttributeValue_Default) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *AttributeValue_Default) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAuthHealthResponse returns the union data inside the ServiceHealthResponse_Info as a AuthHealthResponse
func (t ServiceHealthResponse_Info) AsAuthHealthResponse() (AuthHealthResponse, error) {
	var body AuthHealthResponse
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAuthHealthResponse overwrites any union data inside the ServiceHealthResponse_Info as the provided AuthHealthResponse
func (t *ServiceHealthResponse_Info) FromAuthHealthResponse(v AuthHealthResponse) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAuthHealthResponse performs a merge with any union data inside the ServiceHealthResponse_Info, using the provided AuthHealthResponse
func (t *ServiceHealthResponse_Info) MergeAuthHealthResponse(v AuthHealthResponse) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsRealtimeHealthResponse returns the union data inside the ServiceHealthResponse_Info as a RealtimeHealthResponse
func (t ServiceHealthResponse_Info) AsRealtimeHealthResponse() (RealtimeHealthResponse, error) {
	var body RealtimeHealthResponse
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRealtimeHealthResponse overwrites any union data inside the ServiceHealthResponse_Info as the provided RealtimeHealthResponse
func (t *ServiceHealthResponse_Info) FromRealtimeHealthResponse(v RealtimeHealthResponse) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRealtimeHealthResponse performs a merge with any union data inside the ServiceHealthResponse_Info, using the provided RealtimeHealthResponse
func (t *ServiceHealthResponse_Info) MergeRealtimeHealthResponse(v RealtimeHealthResponse) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t ServiceHealthResponse_Info) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ServiceHealthResponse_Info) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
